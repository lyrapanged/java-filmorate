DROP TABLE IF EXISTs genres CAScade;
DROP TABLE IF EXISTs film_genres CAScade;
DROP TABLE IF EXISTs film_likes CAScade;
DROP TABLE IF EXISTs users CAScade;
DROP TABLE IF EXISTs friends CAScade;
DROP TABLE IF EXISTs ratings_mpa CAScade;
DROP TABLE IF EXISTs films CAScade;



CREATE TABLE IF NOT EXISTS mpa_rating
(
    id_rating   int generated by default as identity primary key,
    name        varchar(255) NOT NULL UNIQUE,
    description varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS films
(
    id_film      bigint generated by default as identity primary key,
    name         varchar(255) NOT NULL,
    description  varchar(200),
    release_date date         NOT NULL,
    duration     int          NOT NULL,
    id_rating    int          NOT NULL REFERENCES mpa_rating (id_rating) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS genres
(
    id_genre int generated by default as identity primary key,
    name     varchar(255) NOT NULL UNIQUE
);


CREATE TABLE IF NOT EXISTS film_genre
(
    id_film  bigint REFERENCES films (id_film) ON DELETE CASCADE,
    id_genre int REFERENCES genres (id_genre) ON DELETE RESTRICT,
    PRIMARY KEY (id_film, id_genre)
);

CREATE TABLE IF NOT EXISTS users
(
    id_user  bigint generated by default as identity primary key,
    email    varchar(255) NOT NULL,
    login    varchar(255) NOT NULL,
    name     varchar(255),
    birthday date
);

CREATE TABLE IF NOT EXISTS film_likes
(
    id_film bigint REFERENCES films (id_film) ON DELETE CASCADE,
    id_user bigint REFERENCES users (id_user) ON DELETE CASCADE,
    PRIMARY KEY (id_film, id_user)
);

CREATE TABLE IF NOT EXISTS friends
(
    id_friends INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_user   bigint REFERENCES users (id_user) ON DELETE CASCADE,
    id_friend bigint REFERENCES users (id_user) ON DELETE CASCADE,
    status    boolean
);

